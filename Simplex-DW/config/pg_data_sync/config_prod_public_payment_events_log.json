{
  "mapping_name": "config_pg_prod_public_payment_events_log",
  "source_conn_id": "postgres_default",
  "s3_data_bucket": "splx-data-snowflake",
  "s3_data_prefix": "prod-pg",
  "target_conn_id": "snowflake_conn",
  "target_stage": "public.S3_STAGE_PROD_PG",
  "target_role": "SYSADMIN",
  "batch_max_rows": 200000,
  "batch_min_rows": 10,
  "schedule": "09/12 * * * *",

  "file_format": "public.CSV_DQ_NAN",
  "rules": [
        {
      "schema_name": "public",
      "table_name": "payment_events_log",
      "order_field": "id",
      "sql": "SELECT id, payment_id, name, created_at, event_id, partner_id, consumed_at,(((payment #- '{kyc_user_details,zip}' #- '{kyc_user_details,id_num}' #- '{kyc_user_details,city}' #- '{kyc_user_details,first_name}' #- '{kyc_user_details,last_name}' #- '{kyc_user_details,date_of_birth}' #- '{kyc_user_details,id_expiration}' #- '{user_destination_wallet,address}'#- '{referral_destination_wallet,address}') -'city' -'ip_hash'-'user_id'-'uaid_hash'-'email_hash'-'phone_hash' -'date_of_birth' -'zip'-'first_name'-'last_name' -'address_line_1'-'address_line_2' -'partner_end_user_id')) AS payment,payment->>'partner_end_user_id' AS payment_partner_end_user_id,etl.f_mask_date(payment->>'date_of_birth') AS date_of_birth, etl.f_mask_date(payment->'kyc_user_details'->>'date_of_birth')FROM public.payment_events_log",
      "load_method": "insert-only",
      "columns_to_hash":"payment_partner_end_user_id",
      "key_field": "id",
      "tags": ["ms1"]

    }
  ]
}